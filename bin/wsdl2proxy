#!/usr/bin/env ruby

require 'rubygems'
require 'service_proxy/base'

def underscore(camel_cased_word)
  camel_cased_word.to_s.gsub(/::/, '/').
    gsub(/([A-Z]+)([A-Z][a-z])/,'\1_\2').
    gsub(/([a-z\d])([A-Z])/,'\1_\2').
    tr("-", "_").
    downcase
end

unless ARGV.size > 0
  puts "Usage: #{$0} [endpoint]"
  exit!
end

template_filename = File.dirname(__FILE__) + '/../lib/templates/proxy.rbt'
proxy = ServiceProxy::Base.new(ARGV[0])
output_filename = 'default.rb'
output_klass_name = 'GeneratedService'
output = ''
proxy.service_methods.each do |service_method|
  output << <<-EOS  

  def build_#{underscore(service_method)}(options)
    soap_envelope(options) do |xml|
    end
  end
  
  def parse_#{underscore(service_method)}(response)
    Hpricot.XML(response.body)
  end
  EOS
end
template = File.read(template_filename)
template.gsub!(/%name%/, output_klass_name)
template.gsub!(/%body%/, output)
template.gsub!(/%uri%/, ARGV[0])
File.open(output_filename, 'w') { |f| f.puts template }
puts "Generated proxy #{output_filename} - You can use the proxy by executing #{output_klass_name}.new('#{ARGV[0]}')"